{"ast":null,"code":"import _classCallCheck from \"C:\\\\295B\\\\Disaster-management-portal\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\295B\\\\Disaster-management-portal\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\295B\\\\Disaster-management-portal\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\295B\\\\Disaster-management-portal\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\295B\\\\Disaster-management-portal\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\295B\\\\Disaster-management-portal\\\\client\\\\src\\\\components\\\\Medical.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport AnimatedNumber from 'react-animated-number';\nimport facebook from './../photos/facebook.png';\nimport twitter from './../';\n\nvar Medical =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Medical, _Component);\n\n  function Medical(props) {\n    var _this;\n\n    _classCallCheck(this, Medical);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Medical).call(this, props));\n    _this.state = {\n      Data: {},\n      Data1: {},\n      medicaldatas: [],\n      stuck: 0,\n      rescued: 0\n    };\n    return _this;\n  }\n\n  _createClass(Medical, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.timer = setInterval(function () {\n        return _this2.setmedicalcount();\n      }, 2000);\n      this.timer1 = setInterval(function () {\n        return _this2.setmedicaldata();\n      }, 2000);\n      this.timer2 = setInterval(function () {\n        return _this2.setallcount();\n      }, 2000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.timer = null;\n      clearInterval(this.timer);\n      this.timer1 = null;\n      clearInterval(this.timer1);\n      this.timer2 = null;\n      clearInterval(this.timer2);\n    }\n  }, {\n    key: \"setmedicalcount\",\n    value: function setmedicalcount() {\n      var _this3 = this;\n\n      var req_header = {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          credentials: 'include'\n        }\n      };\n      axios.get(\"http://localhost:3001/getmedicalcount\", req_header).then(function (res) {\n        var medical = res.data.results[0].data.sort(function (a, b) {\n          return b.stuck - a.stuck;\n        }).slice(0, 10); //console.log(medical);\n\n        var city = [];\n        var stuck = [];\n        var rescued = [];\n        medical.forEach(function (element) {\n          city.push(element.city);\n          stuck.push(element.stuck);\n          rescued.push(element.rescued);\n        });\n\n        _this3.setState({\n          Data: {\n            labels: city,\n            datasets: [{\n              label: 'TOP 10 CITIES WITH MEDICAL CASES REGISTERED',\n              data: stuck,\n              backgroundColor: ['rgba(255,30,30,0.8)', 'rgba(155,100,210,0.8)', 'rgba(90,178,255,0.8)', 'rgba(240,134,67,0.8)', 'rgba(120,120,120,0.8)', 'rgba(250,55,197,0.8)', 'rgba(148,244,129,0.8)', 'rgba(244,228,128,0.8)', 'rgba(247,171,133,0.8)', 'rgba(255,91,91,0.8)', 'rgba(91,153,255,0.8)']\n            }]\n          }\n        });\n\n        _this3.setState({\n          Data1: {\n            labels: city,\n            datasets: [{\n              label: 'CORRESPONDING CITIES WITH NO OF CASES RESOLVED',\n              data: rescued,\n              backgroundColor: ['rgba(255,30,30,0.8)', 'rgba(155,100,210,0.8)', 'rgba(90,178,255,0.8)', 'rgba(240,134,67,0.8)', 'rgba(120,120,120,0.8)', 'rgba(250,55,197,0.8)', 'rgba(148,244,129,0.8)', 'rgba(244,228,128,0.8)', 'rgba(247,171,133,0.8)', 'rgba(255,91,91,0.8)', 'rgba(91,153,255,0.8)']\n            }]\n          }\n        });\n      });\n    }\n  }, {\n    key: \"setmedicaldata\",\n    value: function setmedicaldata() {\n      var _this4 = this;\n\n      var req_header = {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          credentials: 'include'\n        }\n      };\n      axios.get(\"http://localhost:3001/getmedicaldata\", req_header).then(function (res) {\n        console.log(res.data.results);\n\n        _this4.setState({\n          medicaldatas: res.data.results\n        });\n      });\n    }\n  }, {\n    key: \"setallcount\",\n    value: function setallcount() {\n      var _this5 = this;\n\n      var req_header = {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          credentials: 'include'\n        }\n      };\n      axios.get(\"http://localhost:3001/getallcount\", req_header).then(function (res) {\n        console.log(res.data.results[0]);\n        var n1 = res.data.results[0].MedicalStuck;\n        var n2 = res.data.results[0].MedicalRescued;\n\n        _this5.setState({\n          stuck: n1,\n          rescued: n2\n        });\n      });\n    }\n  }, {\n    key: \"renderData\",\n    value: function renderData() {\n      return this.state.medicaldatas.map(function (medicaldata) {\n        if (medicaldata.source == \"twitter\") {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-body\",\n            style: {\n              width: \"96%\",\n              margin: \"2%\",\n              backgroundColor: \"white\",\n              boxShadow: \"1px 1px 1px 1px #efefef\",\n              borderRadius: \"2%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"card-body\",\n            src: facebook,\n            style: {\n              width: \"100%\",\n              height: '75px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }), React.createElement(\"h5\", {\n            className: \"card-title\",\n            style: {\n              width: \"100%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }, medicaldata.location), React.createElement(\"p\", {\n            className: \"card-text\",\n            style: {\n              width: \"100%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          }, medicaldata.message)));\n        } else if (medicaldata.source == \"fb\") {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-body\",\n            style: {\n              width: \"96%\",\n              margin: \"2%\",\n              backgroundColor: \"white\",\n              boxShadow: \"1px 1px 1px 1px #efefef\",\n              borderRadius: \"2%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"card-body\",\n            src: facebook,\n            style: {\n              width: \"100%\",\n              height: '75px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          }), React.createElement(\"h5\", {\n            className: \"card-title\",\n            style: {\n              width: \"100%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          }, medicaldata.location), React.createElement(\"p\", {\n            className: \"card-text\",\n            style: {\n              width: \"100%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183\n            },\n            __self: this\n          }, medicaldata.message)));\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-body\",\n            style: {\n              width: \"96%\",\n              margin: \"2%\",\n              backgroundColor: \"white\",\n              boxShadow: \"1px 1px 1px 1px #efefef\",\n              borderRadius: \"2%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"card-body\",\n            src: facebook,\n            style: {\n              width: \"100%\",\n              height: '75px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }), React.createElement(\"h5\", {\n            className: \"card-title\",\n            style: {\n              width: \"100%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          }, medicaldata.location), React.createElement(\"p\", {\n            className: \"card-text\",\n            style: {\n              width: \"100%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          }, medicaldata.message), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          })));\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Home\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/fire\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Fire-Events\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Link, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Contact\")), React.createElement(\"li\", {\n        className: \"heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"DISASTER MANAGEMENT PORTAL\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          color: '#8424c9',\n          marginTop: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"TOP 10 CITIES WITH MEDICAL CASES\")), React.createElement(\"div\", {\n        className: \"update-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"MEDICAL-CASES RESOLVED:\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(AnimatedNumber, {\n        component: \"text\",\n        value: this.state.rescued,\n        style: {\n          transition: '0.8s ease-out',\n          fontSize: 48,\n          transitionProperty: 'background-color, color, opacity'\n        },\n        frameStyle: function frameStyle(perc) {\n          return perc === 100 ? {} : {\n            backgroundColor: '#8424c9'\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"update-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"MEDICAL-CASES OVERALL:\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(AnimatedNumber, {\n        component: \"text\",\n        value: this.state.stuck,\n        style: {\n          transition: '0.8s ease-out',\n          fontSize: 48,\n          transitionProperty: 'background-color, color, opacity'\n        },\n        frameStyle: function frameStyle(perc) {\n          return perc === 100 ? {} : {\n            backgroundColor: '#8424c9'\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"graph1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: this.state.Data,\n        options: {\n          maintainAspectRatio: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"graph2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: this.state.Data1,\n        options: {\n          maintainAspectRatio: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"right-feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: {\n          color: \"#8424c9\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"LIVE FEED\")), this.renderData()));\n    }\n  }]);\n\n  return Medical;\n}(Component);\n\nexport default withRouter(Medical);","map":{"version":3,"sources":["C:\\295B\\Disaster-management-portal\\client\\src\\components\\Medical.js"],"names":["React","Component","Link","withRouter","Bar","axios","AnimatedNumber","facebook","twitter","Medical","props","state","Data","Data1","medicaldatas","stuck","rescued","timer","setInterval","setmedicalcount","timer1","setmedicaldata","timer2","setallcount","clearInterval","req_header","headers","credentials","get","then","res","medical","data","results","sort","a","b","slice","city","forEach","element","push","setState","labels","datasets","label","backgroundColor","console","log","n1","MedicalStuck","n2","MedicalRescued","map","medicaldata","source","width","margin","boxShadow","borderRadius","height","location","message","color","marginTop","transition","fontSize","transitionProperty","perc","maintainAspectRatio","renderData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport AnimatedNumber from 'react-animated-number';\r\nimport facebook from './../photos/facebook.png';\r\nimport twitter from './../'\r\n\r\nclass Medical extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Data: {},\r\n            Data1: {},\r\n            medicaldatas: [],\r\n            stuck: 0,\r\n            rescued: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.timer = setInterval(()=> this.setmedicalcount(), 2000);\r\n        this.timer1 = setInterval(()=> this.setmedicaldata(), 2000);\r\n        this.timer2 = setInterval(()=> this.setallcount(), 2000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.timer  = null;\r\n        clearInterval(this.timer);\r\n        this.timer1 = null;\r\n        clearInterval(this.timer1);\r\n        this.timer2 = null;\r\n        clearInterval(this.timer2);\r\n    }\r\n\r\n    setmedicalcount(){\r\n        const req_header = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                credentials: 'include'\r\n            }\r\n        };\r\n        axios.get(`http://localhost:3001/getmedicalcount`, req_header)\r\n            .then(res => {\r\n                const medical = res.data.results[0].data.sort(function(a, b){return b.stuck-a.stuck}).slice(0,10);\r\n                //console.log(medical);\r\n                let city = [];\r\n                let stuck = [];\r\n                let rescued = [];\r\n                medical.forEach(element => {\r\n                    city.push(element.city);\r\n                    stuck.push(element.stuck);\r\n                    rescued.push(element.rescued);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: city,\r\n                        datasets:[\r\n                            {\r\n                                label:'TOP 10 CITIES WITH MEDICAL CASES REGISTERED',\r\n                                data: stuck ,\r\n                                backgroundColor:[\r\n                                    'rgba(255,30,30,0.8)',\r\n                                    'rgba(155,100,210,0.8)',\r\n                                    'rgba(90,178,255,0.8)',\r\n                                    'rgba(240,134,67,0.8)',\r\n                                    'rgba(120,120,120,0.8)',\r\n                                    'rgba(250,55,197,0.8)',\r\n                                    'rgba(148,244,129,0.8)',\r\n                                    'rgba(244,228,128,0.8)',\r\n                                    'rgba(247,171,133,0.8)',\r\n                                    'rgba(255,91,91,0.8)',\r\n                                    'rgba(91,153,255,0.8)'\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n\r\n                this.setState({\r\n                    Data1: {\r\n                        labels: city,\r\n                        datasets:[\r\n                            {\r\n                                label:'CORRESPONDING CITIES WITH NO OF CASES RESOLVED',\r\n                                data: rescued ,\r\n                                backgroundColor:[\r\n                                    'rgba(255,30,30,0.8)',\r\n                                    'rgba(155,100,210,0.8)',\r\n                                    'rgba(90,178,255,0.8)',\r\n                                    'rgba(240,134,67,0.8)',\r\n                                    'rgba(120,120,120,0.8)',\r\n                                    'rgba(250,55,197,0.8)',\r\n                                    'rgba(148,244,129,0.8)',\r\n                                    'rgba(244,228,128,0.8)',\r\n                                    'rgba(247,171,133,0.8)',\r\n                                    'rgba(255,91,91,0.8)',\r\n                                    'rgba(91,153,255,0.8)'\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n    }\r\n\r\n    setmedicaldata(){\r\n        const req_header = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                credentials: 'include'\r\n            }\r\n        };\r\n        axios.get(`http://localhost:3001/getmedicaldata`, req_header)\r\n            .then(res => {\r\n                console.log(res.data.results)\r\n                this.setState({\r\n                    medicaldatas: res.data.results\r\n                })\r\n            })\r\n    }\r\n\r\n    setallcount(){\r\n        const req_header = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                credentials: 'include'\r\n            }\r\n        };\r\n        axios.get(`http://localhost:3001/getallcount`, req_header)\r\n            .then(res => {\r\n                console.log(res.data.results[0])\r\n                const n1 = res.data.results[0].MedicalStuck;\r\n                const n2 = res.data.results[0].MedicalRescued;\r\n\r\n                this.setState({\r\n                    stuck: n1,\r\n                    rescued: n2\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    renderData(){\r\n        return this.state.medicaldatas.map((medicaldata) => {\r\n                    if(medicaldata.source == \"twitter\") {\r\n                        return (\r\n                            <div>\r\n                                <div className=\"card-body\" style={{\r\n                                    width: \"96%\",\r\n                                    margin: \"2%\",\r\n                                    backgroundColor: \"white\",\r\n                                    boxShadow: \"1px 1px 1px 1px #efefef\",\r\n                                    borderRadius: \"2%\"\r\n                                }}>\r\n                                    <img className=\"card-body\" src={facebook} style={{width: \"100%\", height: '75px'}}/>\r\n                                    <h5 className=\"card-title\" style={{width: \"100%\"}}>{medicaldata.location}</h5>\r\n                                    <p className=\"card-text\" style={{width: \"100%\"}}>{medicaldata.message}</p>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else if(medicaldata.source == \"fb\"){\r\n                        return (\r\n                            <div>\r\n                                <div className=\"card-body\" style={{\r\n                                    width: \"96%\",\r\n                                    margin: \"2%\",\r\n                                    backgroundColor: \"white\",\r\n                                    boxShadow: \"1px 1px 1px 1px #efefef\",\r\n                                    borderRadius: \"2%\"\r\n                                }}>\r\n                                    <img className=\"card-body\" src={facebook} style={{width: \"100%\", height: '75px'}}/>\r\n                                    <h5 className=\"card-title\" style={{width: \"100%\"}}>{medicaldata.location}</h5>\r\n                                    <p className=\"card-text\" style={{width: \"100%\"}}>{medicaldata.message}</p>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else{\r\n                        return (\r\n                            <div>\r\n                                <div className=\"card-body\" style={{\r\n                                    width: \"96%\",\r\n                                    margin: \"2%\",\r\n                                    backgroundColor: \"white\",\r\n                                    boxShadow: \"1px 1px 1px 1px #efefef\",\r\n                                    borderRadius: \"2%\"\r\n                                }}>\r\n                                    <img className=\"card-body\" src={facebook} style={{width: \"100%\", height: '75px'}}/>\r\n                                    <h5 className=\"card-title\" style={{width: \"100%\"}}>{medicaldata.location}</h5>\r\n                                    <p className=\"card-text\" style={{width: \"100%\"}}>{medicaldata.message}</p>\r\n                                    <br/>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                    }\r\n                    )\r\n                }\r\n\r\n\r\n\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n\r\n                <ul>\r\n                    <li><Link to=\"/\" className=\"active\"  >Home</Link></li>\r\n                    <li><Link to=\"/fire\" >Fire-Events</Link></li>\r\n                    <li><Link >Contact</Link></li>\r\n                    <li className=\"heading\">DISASTER MANAGEMENT PORTAL</li>\r\n                </ul>\r\n                <br />\r\n\r\n                <div className=\"counter\">\r\n                    <h2 style={{ color: '#8424c9', marginTop: '0px'}}><b>TOP 10 CITIES WITH MEDICAL CASES</b></h2>\r\n                    <div className=\"update-1\">\r\n                        <h5><b>MEDICAL-CASES RESOLVED:</b></h5>\r\n                        <h3><b>\r\n                            <AnimatedNumber component=\"text\" value={this.state.rescued}\r\n                                            style={{\r\n                                                transition: '0.8s ease-out',\r\n                                                fontSize: 48,\r\n                                                transitionProperty:\r\n                                                    'background-color, color, opacity'\r\n                                            }}\r\n                                            frameStyle={perc => (\r\n                                                perc === 100 ? {} : {backgroundColor: '#8424c9'}\r\n                                            )}\r\n\r\n                            />\r\n                        </b></h3>\r\n                    </div>\r\n                    <div className=\"update-1\">\r\n                        <h5><b>MEDICAL-CASES OVERALL:</b></h5>\r\n                        <h3><b>\r\n                            <AnimatedNumber component=\"text\" value={this.state.stuck}\r\n                                            style={{\r\n                                                transition: '0.8s ease-out',\r\n                                                fontSize: 48,\r\n                                                transitionProperty:\r\n                                                    'background-color, color, opacity'\r\n                                            }}\r\n                                            frameStyle={perc => (\r\n                                                perc === 100 ? {} : {backgroundColor: '#8424c9'}\r\n                                            )}\r\n\r\n                            />\r\n                        </b></h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"graph1\">\r\n                    <Bar\r\n                        data = {this.state.Data}\r\n                        options = {{ maintainAspectRatio: false }} />\r\n                </div>\r\n                <div className=\"graph2\">\r\n                    <Bar\r\n                        data = {this.state.Data1}\r\n                        options = {{ maintainAspectRatio: false }} />\r\n                </div>\r\n                <div className=\"right-feed\">\r\n                    <h4 style={{ color: \"#8424c9\"}}><b>LIVE FEED</b></h4>\r\n                    {this.renderData()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Medical)"]},"metadata":{},"sourceType":"module"}